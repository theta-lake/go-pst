package properties

// Code generated by github.com/tinylib/msgp DO NOT EDIT.

import (
	"github.com/tinylib/msgp/msgp"
)

// DecodeMsg implements msgp.Decodable
func (z *TeamMessage) DecodeMsg(dc *msgp.Reader) (err error) {
	var field []byte
	_ = field
	var zb0001 uint32
	zb0001, err = dc.ReadMapHeader()
	if err != nil {
		err = msgp.WrapError(err)
		return
	}
	for zb0001 > 0 {
		zb0001--
		field, err = dc.ReadMapKeyPtr()
		if err != nil {
			err = msgp.WrapError(err)
			return
		}
		switch msgp.UnsafeString(field) {
		case "5764":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "ClientSubmitTime")
					return
				}
				z.ClientSubmitTime = nil
			} else {
				if z.ClientSubmitTime == nil {
					z.ClientSubmitTime = new(int64)
				}
				*z.ClientSubmitTime, err = dc.ReadInt64()
				if err != nil {
					err = msgp.WrapError(err, "ClientSubmitTime")
					return
				}
			}
		case "1229564":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "CreationTime")
					return
				}
				z.CreationTime = nil
			} else {
				if z.CreationTime == nil {
					z.CreationTime = new(int64)
				}
				*z.CreationTime, err = dc.ReadInt64()
				if err != nil {
					err = msgp.WrapError(err, "CreationTime")
					return
				}
			}
		case "1637631":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "CreatorName")
					return
				}
				z.CreatorName = nil
			} else {
				if z.CreatorName == nil {
					z.CreatorName = new(string)
				}
				*z.CreatorName, err = dc.ReadString()
				if err != nil {
					err = msgp.WrapError(err, "CreatorName")
					return
				}
			}
		case "358831":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "DisplayTo")
					return
				}
				z.DisplayTo = nil
			} else {
				if z.DisplayTo == nil {
					z.DisplayTo = new(string)
				}
				*z.DisplayTo, err = dc.ReadString()
				if err != nil {
					err = msgp.WrapError(err, "DisplayTo")
					return
				}
			}
		case "233":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "Importance")
					return
				}
				z.Importance = nil
			} else {
				if z.Importance == nil {
					z.Importance = new(int32)
				}
				*z.Importance, err = dc.ReadInt32()
				if err != nil {
					err = msgp.WrapError(err, "Importance")
					return
				}
			}
		case "414931":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "InternetMessageId")
					return
				}
				z.InternetMessageId = nil
			} else {
				if z.InternetMessageId == nil {
					z.InternetMessageId = new(string)
				}
				*z.InternetMessageId, err = dc.ReadString()
				if err != nil {
					err = msgp.WrapError(err, "InternetMessageId")
					return
				}
			}
		case "1229664":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "LastModificationTime")
					return
				}
				z.LastModificationTime = nil
			} else {
				if z.LastModificationTime == nil {
					z.LastModificationTime = new(int64)
				}
				*z.LastModificationTime, err = dc.ReadInt64()
				if err != nil {
					err = msgp.WrapError(err, "LastModificationTime")
					return
				}
			}
		case "359064":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "MessageDeliveryTime")
					return
				}
				z.MessageDeliveryTime = nil
			} else {
				if z.MessageDeliveryTime == nil {
					z.MessageDeliveryTime = new(int64)
				}
				*z.MessageDeliveryTime, err = dc.ReadInt64()
				if err != nil {
					err = msgp.WrapError(err, "MessageDeliveryTime")
					return
				}
			}
		case "35913":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "MessageFlags")
					return
				}
				z.MessageFlags = nil
			} else {
				if z.MessageFlags == nil {
					z.MessageFlags = new(int32)
				}
				*z.MessageFlags, err = dc.ReadInt32()
				if err != nil {
					err = msgp.WrapError(err, "MessageFlags")
					return
				}
			}
		case "35923":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "MessageSize")
					return
				}
				z.MessageSize = nil
			} else {
				if z.MessageSize == nil {
					z.MessageSize = new(int32)
				}
				*z.MessageSize, err = dc.ReadInt32()
				if err != nil {
					err = msgp.WrapError(err, "MessageSize")
					return
				}
			}
		case "10231":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "OriginalSenderAddressType")
					return
				}
				z.OriginalSenderAddressType = nil
			} else {
				if z.OriginalSenderAddressType == nil {
					z.OriginalSenderAddressType = new(string)
				}
				*z.OriginalSenderAddressType, err = dc.ReadString()
				if err != nil {
					err = msgp.WrapError(err, "OriginalSenderAddressType")
					return
				}
			}
		case "10331":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "OriginalSenderEmailAddress")
					return
				}
				z.OriginalSenderEmailAddress = nil
			} else {
				if z.OriginalSenderEmailAddress == nil {
					z.OriginalSenderEmailAddress = new(string)
				}
				*z.OriginalSenderEmailAddress, err = dc.ReadString()
				if err != nil {
					err = msgp.WrapError(err, "OriginalSenderEmailAddress")
					return
				}
			}
		case "9031":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "OriginalSenderName")
					return
				}
				z.OriginalSenderName = nil
			} else {
				if z.OriginalSenderName == nil {
					z.OriginalSenderName = new(string)
				}
				*z.OriginalSenderName, err = dc.ReadString()
				if err != nil {
					err = msgp.WrapError(err, "OriginalSenderName")
					return
				}
			}
		case "10031":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "SentRepresentingAddressType")
					return
				}
				z.SentRepresentingAddressType = nil
			} else {
				if z.SentRepresentingAddressType == nil {
					z.SentRepresentingAddressType = new(string)
				}
				*z.SentRepresentingAddressType, err = dc.ReadString()
				if err != nil {
					err = msgp.WrapError(err, "SentRepresentingAddressType")
					return
				}
			}
		case "10131":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "SentRepresentingEmailAddress")
					return
				}
				z.SentRepresentingEmailAddress = nil
			} else {
				if z.SentRepresentingEmailAddress == nil {
					z.SentRepresentingEmailAddress = new(string)
				}
				*z.SentRepresentingEmailAddress, err = dc.ReadString()
				if err != nil {
					err = msgp.WrapError(err, "SentRepresentingEmailAddress")
					return
				}
			}
		case "6631":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "SentRepresentingName")
					return
				}
				z.SentRepresentingName = nil
			} else {
				if z.SentRepresentingName == nil {
					z.SentRepresentingName = new(string)
				}
				*z.SentRepresentingName, err = dc.ReadString()
				if err != nil {
					err = msgp.WrapError(err, "SentRepresentingName")
					return
				}
			}
		case "3283131":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "WorkloadNotificationContext")
					return
				}
				z.WorkloadNotificationContext = nil
			} else {
				if z.WorkloadNotificationContext == nil {
					z.WorkloadNotificationContext = new(string)
				}
				*z.WorkloadNotificationContext, err = dc.ReadString()
				if err != nil {
					err = msgp.WrapError(err, "WorkloadNotificationContext")
					return
				}
			}
		case "1634531":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "MessageContent")
					return
				}
				z.MessageContent = nil
			} else {
				if z.MessageContent == nil {
					z.MessageContent = new(string)
				}
				*z.MessageContent, err = dc.ReadString()
				if err != nil {
					err = msgp.WrapError(err, "MessageContent")
					return
				}
			}
		case "1393331":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "ThreadId")
					return
				}
				z.ThreadId = nil
			} else {
				if z.ThreadId == nil {
					z.ThreadId = new(string)
				}
				*z.ThreadId, err = dc.ReadString()
				if err != nil {
					err = msgp.WrapError(err, "ThreadId")
					return
				}
			}
		case "3281531":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "ThreadType")
					return
				}
				z.ThreadType = nil
			} else {
				if z.ThreadType == nil {
					z.ThreadType = new(string)
				}
				*z.ThreadType, err = dc.ReadString()
				if err != nil {
					err = msgp.WrapError(err, "ThreadType")
					return
				}
			}
		case "1392231":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "SkypeItemId")
					return
				}
				z.SkypeItemId = nil
			} else {
				if z.SkypeItemId == nil {
					z.SkypeItemId = new(string)
				}
				*z.SkypeItemId, err = dc.ReadString()
				if err != nil {
					err = msgp.WrapError(err, "SkypeItemId")
					return
				}
			}
		case "3284331":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "TenantId")
					return
				}
				z.TenantId = nil
			} else {
				if z.TenantId == nil {
					z.TenantId = new(string)
				}
				*z.TenantId, err = dc.ReadString()
				if err != nil {
					err = msgp.WrapError(err, "TenantId")
					return
				}
			}
		case "3284031":
			if dc.IsNil() {
				err = dc.ReadNil()
				if err != nil {
					err = msgp.WrapError(err, "Participants")
					return
				}
				z.Participants = nil
			} else {
				if z.Participants == nil {
					z.Participants = new(string)
				}
				*z.Participants, err = dc.ReadString()
				if err != nil {
					err = msgp.WrapError(err, "Participants")
					return
				}
			}
		default:
			err = dc.Skip()
			if err != nil {
				err = msgp.WrapError(err)
				return
			}
		}
	}
	return
}

// EncodeMsg implements msgp.Encodable
func (z *TeamMessage) EncodeMsg(en *msgp.Writer) (err error) {
	// omitempty: check for empty values
	zb0001Len := uint32(23)
	var zb0001Mask uint32 /* 23 bits */
	_ = zb0001Mask
	if z.ClientSubmitTime == nil {
		zb0001Len--
		zb0001Mask |= 0x1
	}
	if z.CreationTime == nil {
		zb0001Len--
		zb0001Mask |= 0x2
	}
	if z.CreatorName == nil {
		zb0001Len--
		zb0001Mask |= 0x4
	}
	if z.DisplayTo == nil {
		zb0001Len--
		zb0001Mask |= 0x8
	}
	if z.Importance == nil {
		zb0001Len--
		zb0001Mask |= 0x10
	}
	if z.InternetMessageId == nil {
		zb0001Len--
		zb0001Mask |= 0x20
	}
	if z.LastModificationTime == nil {
		zb0001Len--
		zb0001Mask |= 0x40
	}
	if z.MessageDeliveryTime == nil {
		zb0001Len--
		zb0001Mask |= 0x80
	}
	if z.MessageFlags == nil {
		zb0001Len--
		zb0001Mask |= 0x100
	}
	if z.MessageSize == nil {
		zb0001Len--
		zb0001Mask |= 0x200
	}
	if z.OriginalSenderAddressType == nil {
		zb0001Len--
		zb0001Mask |= 0x400
	}
	if z.OriginalSenderEmailAddress == nil {
		zb0001Len--
		zb0001Mask |= 0x800
	}
	if z.OriginalSenderName == nil {
		zb0001Len--
		zb0001Mask |= 0x1000
	}
	if z.SentRepresentingAddressType == nil {
		zb0001Len--
		zb0001Mask |= 0x2000
	}
	if z.SentRepresentingEmailAddress == nil {
		zb0001Len--
		zb0001Mask |= 0x4000
	}
	if z.SentRepresentingName == nil {
		zb0001Len--
		zb0001Mask |= 0x8000
	}
	if z.WorkloadNotificationContext == nil {
		zb0001Len--
		zb0001Mask |= 0x10000
	}
	if z.MessageContent == nil {
		zb0001Len--
		zb0001Mask |= 0x20000
	}
	if z.ThreadId == nil {
		zb0001Len--
		zb0001Mask |= 0x40000
	}
	if z.ThreadType == nil {
		zb0001Len--
		zb0001Mask |= 0x80000
	}
	if z.SkypeItemId == nil {
		zb0001Len--
		zb0001Mask |= 0x100000
	}
	if z.TenantId == nil {
		zb0001Len--
		zb0001Mask |= 0x200000
	}
	if z.Participants == nil {
		zb0001Len--
		zb0001Mask |= 0x400000
	}
	// variable map header, size zb0001Len
	err = en.WriteMapHeader(zb0001Len)
	if err != nil {
		return
	}
	if zb0001Len == 0 {
		return
	}
	if (zb0001Mask & 0x1) == 0 { // if not empty
		// write "5764"
		err = en.Append(0xa4, 0x35, 0x37, 0x36, 0x34)
		if err != nil {
			return
		}
		if z.ClientSubmitTime == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteInt64(*z.ClientSubmitTime)
			if err != nil {
				err = msgp.WrapError(err, "ClientSubmitTime")
				return
			}
		}
	}
	if (zb0001Mask & 0x2) == 0 { // if not empty
		// write "1229564"
		err = en.Append(0xa7, 0x31, 0x32, 0x32, 0x39, 0x35, 0x36, 0x34)
		if err != nil {
			return
		}
		if z.CreationTime == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteInt64(*z.CreationTime)
			if err != nil {
				err = msgp.WrapError(err, "CreationTime")
				return
			}
		}
	}
	if (zb0001Mask & 0x4) == 0 { // if not empty
		// write "1637631"
		err = en.Append(0xa7, 0x31, 0x36, 0x33, 0x37, 0x36, 0x33, 0x31)
		if err != nil {
			return
		}
		if z.CreatorName == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteString(*z.CreatorName)
			if err != nil {
				err = msgp.WrapError(err, "CreatorName")
				return
			}
		}
	}
	if (zb0001Mask & 0x8) == 0 { // if not empty
		// write "358831"
		err = en.Append(0xa6, 0x33, 0x35, 0x38, 0x38, 0x33, 0x31)
		if err != nil {
			return
		}
		if z.DisplayTo == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteString(*z.DisplayTo)
			if err != nil {
				err = msgp.WrapError(err, "DisplayTo")
				return
			}
		}
	}
	if (zb0001Mask & 0x10) == 0 { // if not empty
		// write "233"
		err = en.Append(0xa3, 0x32, 0x33, 0x33)
		if err != nil {
			return
		}
		if z.Importance == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteInt32(*z.Importance)
			if err != nil {
				err = msgp.WrapError(err, "Importance")
				return
			}
		}
	}
	if (zb0001Mask & 0x20) == 0 { // if not empty
		// write "414931"
		err = en.Append(0xa6, 0x34, 0x31, 0x34, 0x39, 0x33, 0x31)
		if err != nil {
			return
		}
		if z.InternetMessageId == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteString(*z.InternetMessageId)
			if err != nil {
				err = msgp.WrapError(err, "InternetMessageId")
				return
			}
		}
	}
	if (zb0001Mask & 0x40) == 0 { // if not empty
		// write "1229664"
		err = en.Append(0xa7, 0x31, 0x32, 0x32, 0x39, 0x36, 0x36, 0x34)
		if err != nil {
			return
		}
		if z.LastModificationTime == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteInt64(*z.LastModificationTime)
			if err != nil {
				err = msgp.WrapError(err, "LastModificationTime")
				return
			}
		}
	}
	if (zb0001Mask & 0x80) == 0 { // if not empty
		// write "359064"
		err = en.Append(0xa6, 0x33, 0x35, 0x39, 0x30, 0x36, 0x34)
		if err != nil {
			return
		}
		if z.MessageDeliveryTime == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteInt64(*z.MessageDeliveryTime)
			if err != nil {
				err = msgp.WrapError(err, "MessageDeliveryTime")
				return
			}
		}
	}
	if (zb0001Mask & 0x100) == 0 { // if not empty
		// write "35913"
		err = en.Append(0xa5, 0x33, 0x35, 0x39, 0x31, 0x33)
		if err != nil {
			return
		}
		if z.MessageFlags == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteInt32(*z.MessageFlags)
			if err != nil {
				err = msgp.WrapError(err, "MessageFlags")
				return
			}
		}
	}
	if (zb0001Mask & 0x200) == 0 { // if not empty
		// write "35923"
		err = en.Append(0xa5, 0x33, 0x35, 0x39, 0x32, 0x33)
		if err != nil {
			return
		}
		if z.MessageSize == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteInt32(*z.MessageSize)
			if err != nil {
				err = msgp.WrapError(err, "MessageSize")
				return
			}
		}
	}
	if (zb0001Mask & 0x400) == 0 { // if not empty
		// write "10231"
		err = en.Append(0xa5, 0x31, 0x30, 0x32, 0x33, 0x31)
		if err != nil {
			return
		}
		if z.OriginalSenderAddressType == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteString(*z.OriginalSenderAddressType)
			if err != nil {
				err = msgp.WrapError(err, "OriginalSenderAddressType")
				return
			}
		}
	}
	if (zb0001Mask & 0x800) == 0 { // if not empty
		// write "10331"
		err = en.Append(0xa5, 0x31, 0x30, 0x33, 0x33, 0x31)
		if err != nil {
			return
		}
		if z.OriginalSenderEmailAddress == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteString(*z.OriginalSenderEmailAddress)
			if err != nil {
				err = msgp.WrapError(err, "OriginalSenderEmailAddress")
				return
			}
		}
	}
	if (zb0001Mask & 0x1000) == 0 { // if not empty
		// write "9031"
		err = en.Append(0xa4, 0x39, 0x30, 0x33, 0x31)
		if err != nil {
			return
		}
		if z.OriginalSenderName == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteString(*z.OriginalSenderName)
			if err != nil {
				err = msgp.WrapError(err, "OriginalSenderName")
				return
			}
		}
	}
	if (zb0001Mask & 0x2000) == 0 { // if not empty
		// write "10031"
		err = en.Append(0xa5, 0x31, 0x30, 0x30, 0x33, 0x31)
		if err != nil {
			return
		}
		if z.SentRepresentingAddressType == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteString(*z.SentRepresentingAddressType)
			if err != nil {
				err = msgp.WrapError(err, "SentRepresentingAddressType")
				return
			}
		}
	}
	if (zb0001Mask & 0x4000) == 0 { // if not empty
		// write "10131"
		err = en.Append(0xa5, 0x31, 0x30, 0x31, 0x33, 0x31)
		if err != nil {
			return
		}
		if z.SentRepresentingEmailAddress == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteString(*z.SentRepresentingEmailAddress)
			if err != nil {
				err = msgp.WrapError(err, "SentRepresentingEmailAddress")
				return
			}
		}
	}
	if (zb0001Mask & 0x8000) == 0 { // if not empty
		// write "6631"
		err = en.Append(0xa4, 0x36, 0x36, 0x33, 0x31)
		if err != nil {
			return
		}
		if z.SentRepresentingName == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteString(*z.SentRepresentingName)
			if err != nil {
				err = msgp.WrapError(err, "SentRepresentingName")
				return
			}
		}
	}
	if (zb0001Mask & 0x10000) == 0 { // if not empty
		// write "3283131"
		err = en.Append(0xa7, 0x33, 0x32, 0x38, 0x33, 0x31, 0x33, 0x31)
		if err != nil {
			return
		}
		if z.WorkloadNotificationContext == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteString(*z.WorkloadNotificationContext)
			if err != nil {
				err = msgp.WrapError(err, "WorkloadNotificationContext")
				return
			}
		}
	}
	if (zb0001Mask & 0x20000) == 0 { // if not empty
		// write "1634531"
		err = en.Append(0xa7, 0x31, 0x36, 0x33, 0x34, 0x35, 0x33, 0x31)
		if err != nil {
			return
		}
		if z.MessageContent == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteString(*z.MessageContent)
			if err != nil {
				err = msgp.WrapError(err, "MessageContent")
				return
			}
		}
	}
	if (zb0001Mask & 0x40000) == 0 { // if not empty
		// write "1393331"
		err = en.Append(0xa7, 0x31, 0x33, 0x39, 0x33, 0x33, 0x33, 0x31)
		if err != nil {
			return
		}
		if z.ThreadId == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteString(*z.ThreadId)
			if err != nil {
				err = msgp.WrapError(err, "ThreadId")
				return
			}
		}
	}
	if (zb0001Mask & 0x80000) == 0 { // if not empty
		// write "3281531"
		err = en.Append(0xa7, 0x33, 0x32, 0x38, 0x31, 0x35, 0x33, 0x31)
		if err != nil {
			return
		}
		if z.ThreadType == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteString(*z.ThreadType)
			if err != nil {
				err = msgp.WrapError(err, "ThreadType")
				return
			}
		}
	}
	if (zb0001Mask & 0x100000) == 0 { // if not empty
		// write "1392231"
		err = en.Append(0xa7, 0x31, 0x33, 0x39, 0x32, 0x32, 0x33, 0x31)
		if err != nil {
			return
		}
		if z.SkypeItemId == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteString(*z.SkypeItemId)
			if err != nil {
				err = msgp.WrapError(err, "SkypeItemId")
				return
			}
		}
	}
	if (zb0001Mask & 0x200000) == 0 { // if not empty
		// write "3284331"
		err = en.Append(0xa7, 0x33, 0x32, 0x38, 0x34, 0x33, 0x33, 0x31)
		if err != nil {
			return
		}
		if z.TenantId == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteString(*z.TenantId)
			if err != nil {
				err = msgp.WrapError(err, "TenantId")
				return
			}
		}
	}
	if (zb0001Mask & 0x400000) == 0 { // if not empty
		// write "3284031"
		err = en.Append(0xa7, 0x33, 0x32, 0x38, 0x34, 0x30, 0x33, 0x31)
		if err != nil {
			return
		}
		if z.Participants == nil {
			err = en.WriteNil()
			if err != nil {
				return
			}
		} else {
			err = en.WriteString(*z.Participants)
			if err != nil {
				err = msgp.WrapError(err, "Participants")
				return
			}
		}
	}
	return
}

// MarshalMsg implements msgp.Marshaler
func (z *TeamMessage) MarshalMsg(b []byte) (o []byte, err error) {
	o = msgp.Require(b, z.Msgsize())
	// omitempty: check for empty values
	zb0001Len := uint32(23)
	var zb0001Mask uint32 /* 23 bits */
	_ = zb0001Mask
	if z.ClientSubmitTime == nil {
		zb0001Len--
		zb0001Mask |= 0x1
	}
	if z.CreationTime == nil {
		zb0001Len--
		zb0001Mask |= 0x2
	}
	if z.CreatorName == nil {
		zb0001Len--
		zb0001Mask |= 0x4
	}
	if z.DisplayTo == nil {
		zb0001Len--
		zb0001Mask |= 0x8
	}
	if z.Importance == nil {
		zb0001Len--
		zb0001Mask |= 0x10
	}
	if z.InternetMessageId == nil {
		zb0001Len--
		zb0001Mask |= 0x20
	}
	if z.LastModificationTime == nil {
		zb0001Len--
		zb0001Mask |= 0x40
	}
	if z.MessageDeliveryTime == nil {
		zb0001Len--
		zb0001Mask |= 0x80
	}
	if z.MessageFlags == nil {
		zb0001Len--
		zb0001Mask |= 0x100
	}
	if z.MessageSize == nil {
		zb0001Len--
		zb0001Mask |= 0x200
	}
	if z.OriginalSenderAddressType == nil {
		zb0001Len--
		zb0001Mask |= 0x400
	}
	if z.OriginalSenderEmailAddress == nil {
		zb0001Len--
		zb0001Mask |= 0x800
	}
	if z.OriginalSenderName == nil {
		zb0001Len--
		zb0001Mask |= 0x1000
	}
	if z.SentRepresentingAddressType == nil {
		zb0001Len--
		zb0001Mask |= 0x2000
	}
	if z.SentRepresentingEmailAddress == nil {
		zb0001Len--
		zb0001Mask |= 0x4000
	}
	if z.SentRepresentingName == nil {
		zb0001Len--
		zb0001Mask |= 0x8000
	}
	if z.WorkloadNotificationContext == nil {
		zb0001Len--
		zb0001Mask |= 0x10000
	}
	if z.MessageContent == nil {
		zb0001Len--
		zb0001Mask |= 0x20000
	}
	if z.ThreadId == nil {
		zb0001Len--
		zb0001Mask |= 0x40000
	}
	if z.ThreadType == nil {
		zb0001Len--
		zb0001Mask |= 0x80000
	}
	if z.SkypeItemId == nil {
		zb0001Len--
		zb0001Mask |= 0x100000
	}
	if z.TenantId == nil {
		zb0001Len--
		zb0001Mask |= 0x200000
	}
	if z.Participants == nil {
		zb0001Len--
		zb0001Mask |= 0x400000
	}
	// variable map header, size zb0001Len
	o = msgp.AppendMapHeader(o, zb0001Len)
	if zb0001Len == 0 {
		return
	}
	if (zb0001Mask & 0x1) == 0 { // if not empty
		// string "5764"
		o = append(o, 0xa4, 0x35, 0x37, 0x36, 0x34)
		if z.ClientSubmitTime == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendInt64(o, *z.ClientSubmitTime)
		}
	}
	if (zb0001Mask & 0x2) == 0 { // if not empty
		// string "1229564"
		o = append(o, 0xa7, 0x31, 0x32, 0x32, 0x39, 0x35, 0x36, 0x34)
		if z.CreationTime == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendInt64(o, *z.CreationTime)
		}
	}
	if (zb0001Mask & 0x4) == 0 { // if not empty
		// string "1637631"
		o = append(o, 0xa7, 0x31, 0x36, 0x33, 0x37, 0x36, 0x33, 0x31)
		if z.CreatorName == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendString(o, *z.CreatorName)
		}
	}
	if (zb0001Mask & 0x8) == 0 { // if not empty
		// string "358831"
		o = append(o, 0xa6, 0x33, 0x35, 0x38, 0x38, 0x33, 0x31)
		if z.DisplayTo == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendString(o, *z.DisplayTo)
		}
	}
	if (zb0001Mask & 0x10) == 0 { // if not empty
		// string "233"
		o = append(o, 0xa3, 0x32, 0x33, 0x33)
		if z.Importance == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendInt32(o, *z.Importance)
		}
	}
	if (zb0001Mask & 0x20) == 0 { // if not empty
		// string "414931"
		o = append(o, 0xa6, 0x34, 0x31, 0x34, 0x39, 0x33, 0x31)
		if z.InternetMessageId == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendString(o, *z.InternetMessageId)
		}
	}
	if (zb0001Mask & 0x40) == 0 { // if not empty
		// string "1229664"
		o = append(o, 0xa7, 0x31, 0x32, 0x32, 0x39, 0x36, 0x36, 0x34)
		if z.LastModificationTime == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendInt64(o, *z.LastModificationTime)
		}
	}
	if (zb0001Mask & 0x80) == 0 { // if not empty
		// string "359064"
		o = append(o, 0xa6, 0x33, 0x35, 0x39, 0x30, 0x36, 0x34)
		if z.MessageDeliveryTime == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendInt64(o, *z.MessageDeliveryTime)
		}
	}
	if (zb0001Mask & 0x100) == 0 { // if not empty
		// string "35913"
		o = append(o, 0xa5, 0x33, 0x35, 0x39, 0x31, 0x33)
		if z.MessageFlags == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendInt32(o, *z.MessageFlags)
		}
	}
	if (zb0001Mask & 0x200) == 0 { // if not empty
		// string "35923"
		o = append(o, 0xa5, 0x33, 0x35, 0x39, 0x32, 0x33)
		if z.MessageSize == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendInt32(o, *z.MessageSize)
		}
	}
	if (zb0001Mask & 0x400) == 0 { // if not empty
		// string "10231"
		o = append(o, 0xa5, 0x31, 0x30, 0x32, 0x33, 0x31)
		if z.OriginalSenderAddressType == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendString(o, *z.OriginalSenderAddressType)
		}
	}
	if (zb0001Mask & 0x800) == 0 { // if not empty
		// string "10331"
		o = append(o, 0xa5, 0x31, 0x30, 0x33, 0x33, 0x31)
		if z.OriginalSenderEmailAddress == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendString(o, *z.OriginalSenderEmailAddress)
		}
	}
	if (zb0001Mask & 0x1000) == 0 { // if not empty
		// string "9031"
		o = append(o, 0xa4, 0x39, 0x30, 0x33, 0x31)
		if z.OriginalSenderName == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendString(o, *z.OriginalSenderName)
		}
	}
	if (zb0001Mask & 0x2000) == 0 { // if not empty
		// string "10031"
		o = append(o, 0xa5, 0x31, 0x30, 0x30, 0x33, 0x31)
		if z.SentRepresentingAddressType == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendString(o, *z.SentRepresentingAddressType)
		}
	}
	if (zb0001Mask & 0x4000) == 0 { // if not empty
		// string "10131"
		o = append(o, 0xa5, 0x31, 0x30, 0x31, 0x33, 0x31)
		if z.SentRepresentingEmailAddress == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendString(o, *z.SentRepresentingEmailAddress)
		}
	}
	if (zb0001Mask & 0x8000) == 0 { // if not empty
		// string "6631"
		o = append(o, 0xa4, 0x36, 0x36, 0x33, 0x31)
		if z.SentRepresentingName == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendString(o, *z.SentRepresentingName)
		}
	}
	if (zb0001Mask & 0x10000) == 0 { // if not empty
		// string "3283131"
		o = append(o, 0xa7, 0x33, 0x32, 0x38, 0x33, 0x31, 0x33, 0x31)
		if z.WorkloadNotificationContext == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendString(o, *z.WorkloadNotificationContext)
		}
	}
	if (zb0001Mask & 0x20000) == 0 { // if not empty
		// string "1634531"
		o = append(o, 0xa7, 0x31, 0x36, 0x33, 0x34, 0x35, 0x33, 0x31)
		if z.MessageContent == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendString(o, *z.MessageContent)
		}
	}
	if (zb0001Mask & 0x40000) == 0 { // if not empty
		// string "1393331"
		o = append(o, 0xa7, 0x31, 0x33, 0x39, 0x33, 0x33, 0x33, 0x31)
		if z.ThreadId == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendString(o, *z.ThreadId)
		}
	}
	if (zb0001Mask & 0x80000) == 0 { // if not empty
		// string "3281531"
		o = append(o, 0xa7, 0x33, 0x32, 0x38, 0x31, 0x35, 0x33, 0x31)
		if z.ThreadType == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendString(o, *z.ThreadType)
		}
	}
	if (zb0001Mask & 0x100000) == 0 { // if not empty
		// string "1392231"
		o = append(o, 0xa7, 0x31, 0x33, 0x39, 0x32, 0x32, 0x33, 0x31)
		if z.SkypeItemId == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendString(o, *z.SkypeItemId)
		}
	}
	if (zb0001Mask & 0x200000) == 0 { // if not empty
		// string "3284331"
		o = append(o, 0xa7, 0x33, 0x32, 0x38, 0x34, 0x33, 0x33, 0x31)
		if z.TenantId == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendString(o, *z.TenantId)
		}
	}
	if (zb0001Mask & 0x400000) == 0 { // if not empty
		// string "3284031"
		o = append(o, 0xa7, 0x33, 0x32, 0x38, 0x34, 0x30, 0x33, 0x31)
		if z.Participants == nil {
			o = msgp.AppendNil(o)
		} else {
			o = msgp.AppendString(o, *z.Participants)
		}
	}
	return
}

// UnmarshalMsg implements msgp.Unmarshaler
func (z *TeamMessage) UnmarshalMsg(bts []byte) (o []byte, err error) {
	var field []byte
	_ = field
	var zb0001 uint32
	zb0001, bts, err = msgp.ReadMapHeaderBytes(bts)
	if err != nil {
		err = msgp.WrapError(err)
		return
	}
	for zb0001 > 0 {
		zb0001--
		field, bts, err = msgp.ReadMapKeyZC(bts)
		if err != nil {
			err = msgp.WrapError(err)
			return
		}
		switch msgp.UnsafeString(field) {
		case "5764":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.ClientSubmitTime = nil
			} else {
				if z.ClientSubmitTime == nil {
					z.ClientSubmitTime = new(int64)
				}
				*z.ClientSubmitTime, bts, err = msgp.ReadInt64Bytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "ClientSubmitTime")
					return
				}
			}
		case "1229564":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.CreationTime = nil
			} else {
				if z.CreationTime == nil {
					z.CreationTime = new(int64)
				}
				*z.CreationTime, bts, err = msgp.ReadInt64Bytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "CreationTime")
					return
				}
			}
		case "1637631":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.CreatorName = nil
			} else {
				if z.CreatorName == nil {
					z.CreatorName = new(string)
				}
				*z.CreatorName, bts, err = msgp.ReadStringBytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "CreatorName")
					return
				}
			}
		case "358831":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.DisplayTo = nil
			} else {
				if z.DisplayTo == nil {
					z.DisplayTo = new(string)
				}
				*z.DisplayTo, bts, err = msgp.ReadStringBytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "DisplayTo")
					return
				}
			}
		case "233":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.Importance = nil
			} else {
				if z.Importance == nil {
					z.Importance = new(int32)
				}
				*z.Importance, bts, err = msgp.ReadInt32Bytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "Importance")
					return
				}
			}
		case "414931":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.InternetMessageId = nil
			} else {
				if z.InternetMessageId == nil {
					z.InternetMessageId = new(string)
				}
				*z.InternetMessageId, bts, err = msgp.ReadStringBytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "InternetMessageId")
					return
				}
			}
		case "1229664":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.LastModificationTime = nil
			} else {
				if z.LastModificationTime == nil {
					z.LastModificationTime = new(int64)
				}
				*z.LastModificationTime, bts, err = msgp.ReadInt64Bytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "LastModificationTime")
					return
				}
			}
		case "359064":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.MessageDeliveryTime = nil
			} else {
				if z.MessageDeliveryTime == nil {
					z.MessageDeliveryTime = new(int64)
				}
				*z.MessageDeliveryTime, bts, err = msgp.ReadInt64Bytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "MessageDeliveryTime")
					return
				}
			}
		case "35913":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.MessageFlags = nil
			} else {
				if z.MessageFlags == nil {
					z.MessageFlags = new(int32)
				}
				*z.MessageFlags, bts, err = msgp.ReadInt32Bytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "MessageFlags")
					return
				}
			}
		case "35923":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.MessageSize = nil
			} else {
				if z.MessageSize == nil {
					z.MessageSize = new(int32)
				}
				*z.MessageSize, bts, err = msgp.ReadInt32Bytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "MessageSize")
					return
				}
			}
		case "10231":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.OriginalSenderAddressType = nil
			} else {
				if z.OriginalSenderAddressType == nil {
					z.OriginalSenderAddressType = new(string)
				}
				*z.OriginalSenderAddressType, bts, err = msgp.ReadStringBytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "OriginalSenderAddressType")
					return
				}
			}
		case "10331":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.OriginalSenderEmailAddress = nil
			} else {
				if z.OriginalSenderEmailAddress == nil {
					z.OriginalSenderEmailAddress = new(string)
				}
				*z.OriginalSenderEmailAddress, bts, err = msgp.ReadStringBytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "OriginalSenderEmailAddress")
					return
				}
			}
		case "9031":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.OriginalSenderName = nil
			} else {
				if z.OriginalSenderName == nil {
					z.OriginalSenderName = new(string)
				}
				*z.OriginalSenderName, bts, err = msgp.ReadStringBytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "OriginalSenderName")
					return
				}
			}
		case "10031":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.SentRepresentingAddressType = nil
			} else {
				if z.SentRepresentingAddressType == nil {
					z.SentRepresentingAddressType = new(string)
				}
				*z.SentRepresentingAddressType, bts, err = msgp.ReadStringBytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "SentRepresentingAddressType")
					return
				}
			}
		case "10131":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.SentRepresentingEmailAddress = nil
			} else {
				if z.SentRepresentingEmailAddress == nil {
					z.SentRepresentingEmailAddress = new(string)
				}
				*z.SentRepresentingEmailAddress, bts, err = msgp.ReadStringBytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "SentRepresentingEmailAddress")
					return
				}
			}
		case "6631":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.SentRepresentingName = nil
			} else {
				if z.SentRepresentingName == nil {
					z.SentRepresentingName = new(string)
				}
				*z.SentRepresentingName, bts, err = msgp.ReadStringBytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "SentRepresentingName")
					return
				}
			}
		case "3283131":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.WorkloadNotificationContext = nil
			} else {
				if z.WorkloadNotificationContext == nil {
					z.WorkloadNotificationContext = new(string)
				}
				*z.WorkloadNotificationContext, bts, err = msgp.ReadStringBytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "WorkloadNotificationContext")
					return
				}
			}
		case "1634531":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.MessageContent = nil
			} else {
				if z.MessageContent == nil {
					z.MessageContent = new(string)
				}
				*z.MessageContent, bts, err = msgp.ReadStringBytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "MessageContent")
					return
				}
			}
		case "1393331":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.ThreadId = nil
			} else {
				if z.ThreadId == nil {
					z.ThreadId = new(string)
				}
				*z.ThreadId, bts, err = msgp.ReadStringBytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "ThreadId")
					return
				}
			}
		case "3281531":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.ThreadType = nil
			} else {
				if z.ThreadType == nil {
					z.ThreadType = new(string)
				}
				*z.ThreadType, bts, err = msgp.ReadStringBytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "ThreadType")
					return
				}
			}
		case "1392231":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.SkypeItemId = nil
			} else {
				if z.SkypeItemId == nil {
					z.SkypeItemId = new(string)
				}
				*z.SkypeItemId, bts, err = msgp.ReadStringBytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "SkypeItemId")
					return
				}
			}
		case "3284331":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.TenantId = nil
			} else {
				if z.TenantId == nil {
					z.TenantId = new(string)
				}
				*z.TenantId, bts, err = msgp.ReadStringBytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "TenantId")
					return
				}
			}
		case "3284031":
			if msgp.IsNil(bts) {
				bts, err = msgp.ReadNilBytes(bts)
				if err != nil {
					return
				}
				z.Participants = nil
			} else {
				if z.Participants == nil {
					z.Participants = new(string)
				}
				*z.Participants, bts, err = msgp.ReadStringBytes(bts)
				if err != nil {
					err = msgp.WrapError(err, "Participants")
					return
				}
			}
		default:
			bts, err = msgp.Skip(bts)
			if err != nil {
				err = msgp.WrapError(err)
				return
			}
		}
	}
	o = bts
	return
}

// Msgsize returns an upper bound estimate of the number of bytes occupied by the serialized message
func (z *TeamMessage) Msgsize() (s int) {
	s = 3 + 5
	if z.ClientSubmitTime == nil {
		s += msgp.NilSize
	} else {
		s += msgp.Int64Size
	}
	s += 8
	if z.CreationTime == nil {
		s += msgp.NilSize
	} else {
		s += msgp.Int64Size
	}
	s += 8
	if z.CreatorName == nil {
		s += msgp.NilSize
	} else {
		s += msgp.StringPrefixSize + len(*z.CreatorName)
	}
	s += 7
	if z.DisplayTo == nil {
		s += msgp.NilSize
	} else {
		s += msgp.StringPrefixSize + len(*z.DisplayTo)
	}
	s += 4
	if z.Importance == nil {
		s += msgp.NilSize
	} else {
		s += msgp.Int32Size
	}
	s += 7
	if z.InternetMessageId == nil {
		s += msgp.NilSize
	} else {
		s += msgp.StringPrefixSize + len(*z.InternetMessageId)
	}
	s += 8
	if z.LastModificationTime == nil {
		s += msgp.NilSize
	} else {
		s += msgp.Int64Size
	}
	s += 7
	if z.MessageDeliveryTime == nil {
		s += msgp.NilSize
	} else {
		s += msgp.Int64Size
	}
	s += 6
	if z.MessageFlags == nil {
		s += msgp.NilSize
	} else {
		s += msgp.Int32Size
	}
	s += 6
	if z.MessageSize == nil {
		s += msgp.NilSize
	} else {
		s += msgp.Int32Size
	}
	s += 6
	if z.OriginalSenderAddressType == nil {
		s += msgp.NilSize
	} else {
		s += msgp.StringPrefixSize + len(*z.OriginalSenderAddressType)
	}
	s += 6
	if z.OriginalSenderEmailAddress == nil {
		s += msgp.NilSize
	} else {
		s += msgp.StringPrefixSize + len(*z.OriginalSenderEmailAddress)
	}
	s += 5
	if z.OriginalSenderName == nil {
		s += msgp.NilSize
	} else {
		s += msgp.StringPrefixSize + len(*z.OriginalSenderName)
	}
	s += 6
	if z.SentRepresentingAddressType == nil {
		s += msgp.NilSize
	} else {
		s += msgp.StringPrefixSize + len(*z.SentRepresentingAddressType)
	}
	s += 6
	if z.SentRepresentingEmailAddress == nil {
		s += msgp.NilSize
	} else {
		s += msgp.StringPrefixSize + len(*z.SentRepresentingEmailAddress)
	}
	s += 5
	if z.SentRepresentingName == nil {
		s += msgp.NilSize
	} else {
		s += msgp.StringPrefixSize + len(*z.SentRepresentingName)
	}
	s += 8
	if z.WorkloadNotificationContext == nil {
		s += msgp.NilSize
	} else {
		s += msgp.StringPrefixSize + len(*z.WorkloadNotificationContext)
	}
	s += 8
	if z.MessageContent == nil {
		s += msgp.NilSize
	} else {
		s += msgp.StringPrefixSize + len(*z.MessageContent)
	}
	s += 8
	if z.ThreadId == nil {
		s += msgp.NilSize
	} else {
		s += msgp.StringPrefixSize + len(*z.ThreadId)
	}
	s += 8
	if z.ThreadType == nil {
		s += msgp.NilSize
	} else {
		s += msgp.StringPrefixSize + len(*z.ThreadType)
	}
	s += 8
	if z.SkypeItemId == nil {
		s += msgp.NilSize
	} else {
		s += msgp.StringPrefixSize + len(*z.SkypeItemId)
	}
	s += 8
	if z.TenantId == nil {
		s += msgp.NilSize
	} else {
		s += msgp.StringPrefixSize + len(*z.TenantId)
	}
	s += 8
	if z.Participants == nil {
		s += msgp.NilSize
	} else {
		s += msgp.StringPrefixSize + len(*z.Participants)
	}
	return
}
