// go-pst is a library for reading Personal Storage Table (.pst) files (written in Go/Golang).
//
// Copyright 2023 Marten Mooij
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//go:generate msgp -tests=false

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: teams_message.proto

package properties

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TeamMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Contains the current time, in UTC, when the email message is submitted.
	ClientSubmitTime *int64 `protobuf:"varint,1,opt,name=client_submit_time,json=clientSubmitTime,proto3,oneof" json:"client_submit_time,omitempty" msg:"5764,omitempty"`  
	// Contains the time, in UTC, that the object was created.
	CreationTime *int64 `protobuf:"varint,2,opt,name=creation_time,json=creationTime,proto3,oneof" json:"creation_time,omitempty" msg:"1229564,omitempty"`  
	// Contains the name of the creator of a Message object.
	CreatorName *string `protobuf:"bytes,3,opt,name=creator_name,json=creatorName,proto3,oneof" json:"creator_name,omitempty" msg:"1637631,omitempty"`  
	// Contains a list of the primary recipient display names, separated by semicolons, when an email message has primary recipients .
	DisplayTo *string `protobuf:"bytes,4,opt,name=display_to,json=displayTo,proto3,oneof" json:"display_to,omitempty" msg:"358831,omitempty"`  
	// Indicates the level of importance assigned by the end user to the Message object.
	Importance *int32 `protobuf:"varint,5,opt,name=importance,proto3,oneof" json:"importance,omitempty" msg:"233,omitempty"`  
	// Corresponds to the message-id field.
	InternetMessageId *string `protobuf:"bytes,6,opt,name=internet_message_id,json=internetMessageId,proto3,oneof" json:"internet_message_id,omitempty" msg:"414931,omitempty"`  
	// Contains the time, in UTC, of the last modification to the object.
	LastModificationTime *int64 `protobuf:"varint,7,opt,name=last_modification_time,json=lastModificationTime,proto3,oneof" json:"last_modification_time,omitempty" msg:"1229664,omitempty"`  
	// Specifies the time (in UTC) when the server received the message.
	MessageDeliveryTime *int64 `protobuf:"varint,8,opt,name=message_delivery_time,json=messageDeliveryTime,proto3,oneof" json:"message_delivery_time,omitempty" msg:"359064,omitempty"`  
	// Specifies the status of the Message object.
	MessageFlags *int32 `protobuf:"varint,9,opt,name=message_flags,json=messageFlags,proto3,oneof" json:"message_flags,omitempty" msg:"35913,omitempty"`  
	// Contains the size, in bytes, consumed by the Message object on the server.
	MessageSize *int32 `protobuf:"varint,10,opt,name=message_size,json=messageSize,proto3,oneof" json:"message_size,omitempty" msg:"35923,omitempty"`  
	// Contains the value of the original message sender's PidTagSenderAddressType property (section 2.1000).
	OriginalSenderAddressType *string `protobuf:"bytes,11,opt,name=original_sender_address_type,json=originalSenderAddressType,proto3,oneof" json:"original_sender_address_type,omitempty" msg:"10231,omitempty"`  
	// Contains the value of the original message sender's PidTagSenderEmailAddress property (section 2.1001).
	OriginalSenderEmailAddress *string `protobuf:"bytes,12,opt,name=original_sender_email_address,json=originalSenderEmailAddress,proto3,oneof" json:"original_sender_email_address,omitempty" msg:"10331,omitempty"`  
	// Contains the value of the original message sender's PidTagSenderName property (section 2.1004), and is set on delivery report messages.
	OriginalSenderName *string `protobuf:"bytes,13,opt,name=original_sender_name,json=originalSenderName,proto3,oneof" json:"original_sender_name,omitempty" msg:"9031,omitempty"`  
	// Contains an email address type.
	SentRepresentingAddressType *string `protobuf:"bytes,14,opt,name=sent_representing_address_type,json=sentRepresentingAddressType,proto3,oneof" json:"sent_representing_address_type,omitempty" msg:"10031,omitempty"`  
	// Contains an email address for the end user who is represented by the sending mailbox owner.
	SentRepresentingEmailAddress *string `protobuf:"bytes,15,opt,name=sent_representing_email_address,json=sentRepresentingEmailAddress,proto3,oneof" json:"sent_representing_email_address,omitempty" msg:"10131,omitempty"`  
	// Contains the display name for the end user who is represented by the sending mailbox owner.
	SentRepresentingName        *string `protobuf:"bytes,16,opt,name=sent_representing_name,json=sentRepresentingName,proto3,oneof" json:"sent_representing_name,omitempty" msg:"6631,omitempty"`                       
	WorkloadNotificationContext *string `protobuf:"bytes,17,opt,name=workload_notification_context,json=workloadNotificationContext,proto3,oneof" json:"workload_notification_context,omitempty" msg:"3283131,omitempty"`  
	// Contains the text from the message 328313
	MessageContent *string `protobuf:"bytes,18,opt,name=message_content,json=messageContent,proto3,oneof" json:"message_content,omitempty" msg:"1634531,omitempty"`  
	// Contains the thread_id the message belongs to
	ThreadId *string `protobuf:"bytes,19,opt,name=thread_id,json=threadId,proto3,oneof" json:"thread_id,omitempty" msg:"1393331,omitempty"`  
	// Contains the thread type
	ThreadType *string `protobuf:"bytes,20,opt,name=thread_type,json=threadType,proto3,oneof" json:"thread_type,omitempty" msg:"3281531,omitempty"`  
	// Contains the item id
	SkypeItemId *string `protobuf:"bytes,21,opt,name=skype_item_id,json=skypeItemId,proto3,oneof" json:"skype_item_id,omitempty" msg:"1392231,omitempty"`  
	// Contain the tenants id
	TenantId     *string `protobuf:"bytes,22,opt,name=tenant_id,json=tenantId,proto3,oneof" json:"tenant_id,omitempty" msg:"3284331,omitempty"`  
	Participants *string `protobuf:"bytes,23,opt,name=participants,proto3,oneof" json:"participants,omitempty" msg:"3284031,omitempty"`          
}

func (x *TeamMessage) Reset() {
	*x = TeamMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teams_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamMessage) ProtoMessage() {}

func (x *TeamMessage) ProtoReflect() protoreflect.Message {
	mi := &file_teams_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamMessage.ProtoReflect.Descriptor instead.
func (*TeamMessage) Descriptor() ([]byte, []int) {
	return file_teams_message_proto_rawDescGZIP(), []int{0}
}

func (x *TeamMessage) GetClientSubmitTime() int64 {
	if x != nil && x.ClientSubmitTime != nil {
		return *x.ClientSubmitTime
	}
	return 0
}

func (x *TeamMessage) GetCreationTime() int64 {
	if x != nil && x.CreationTime != nil {
		return *x.CreationTime
	}
	return 0
}

func (x *TeamMessage) GetCreatorName() string {
	if x != nil && x.CreatorName != nil {
		return *x.CreatorName
	}
	return ""
}

func (x *TeamMessage) GetDisplayTo() string {
	if x != nil && x.DisplayTo != nil {
		return *x.DisplayTo
	}
	return ""
}

func (x *TeamMessage) GetImportance() int32 {
	if x != nil && x.Importance != nil {
		return *x.Importance
	}
	return 0
}

func (x *TeamMessage) GetInternetMessageId() string {
	if x != nil && x.InternetMessageId != nil {
		return *x.InternetMessageId
	}
	return ""
}

func (x *TeamMessage) GetLastModificationTime() int64 {
	if x != nil && x.LastModificationTime != nil {
		return *x.LastModificationTime
	}
	return 0
}

func (x *TeamMessage) GetMessageDeliveryTime() int64 {
	if x != nil && x.MessageDeliveryTime != nil {
		return *x.MessageDeliveryTime
	}
	return 0
}

func (x *TeamMessage) GetMessageFlags() int32 {
	if x != nil && x.MessageFlags != nil {
		return *x.MessageFlags
	}
	return 0
}

func (x *TeamMessage) GetMessageSize() int32 {
	if x != nil && x.MessageSize != nil {
		return *x.MessageSize
	}
	return 0
}

func (x *TeamMessage) GetOriginalSenderAddressType() string {
	if x != nil && x.OriginalSenderAddressType != nil {
		return *x.OriginalSenderAddressType
	}
	return ""
}

func (x *TeamMessage) GetOriginalSenderEmailAddress() string {
	if x != nil && x.OriginalSenderEmailAddress != nil {
		return *x.OriginalSenderEmailAddress
	}
	return ""
}

func (x *TeamMessage) GetOriginalSenderName() string {
	if x != nil && x.OriginalSenderName != nil {
		return *x.OriginalSenderName
	}
	return ""
}

func (x *TeamMessage) GetSentRepresentingAddressType() string {
	if x != nil && x.SentRepresentingAddressType != nil {
		return *x.SentRepresentingAddressType
	}
	return ""
}

func (x *TeamMessage) GetSentRepresentingEmailAddress() string {
	if x != nil && x.SentRepresentingEmailAddress != nil {
		return *x.SentRepresentingEmailAddress
	}
	return ""
}

func (x *TeamMessage) GetSentRepresentingName() string {
	if x != nil && x.SentRepresentingName != nil {
		return *x.SentRepresentingName
	}
	return ""
}

func (x *TeamMessage) GetWorkloadNotificationContext() string {
	if x != nil && x.WorkloadNotificationContext != nil {
		return *x.WorkloadNotificationContext
	}
	return ""
}

func (x *TeamMessage) GetMessageContent() string {
	if x != nil && x.MessageContent != nil {
		return *x.MessageContent
	}
	return ""
}

func (x *TeamMessage) GetThreadId() string {
	if x != nil && x.ThreadId != nil {
		return *x.ThreadId
	}
	return ""
}

func (x *TeamMessage) GetThreadType() string {
	if x != nil && x.ThreadType != nil {
		return *x.ThreadType
	}
	return ""
}

func (x *TeamMessage) GetSkypeItemId() string {
	if x != nil && x.SkypeItemId != nil {
		return *x.SkypeItemId
	}
	return ""
}

func (x *TeamMessage) GetTenantId() string {
	if x != nil && x.TenantId != nil {
		return *x.TenantId
	}
	return ""
}

func (x *TeamMessage) GetParticipants() string {
	if x != nil && x.Participants != nil {
		return *x.Participants
	}
	return ""
}

var File_teams_message_proto protoreflect.FileDescriptor

var file_teams_message_proto_rawDesc = []byte{
	0x0a, 0x13, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x0d, 0x0a, 0x0b, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x01, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x09, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x23,
	0x0a, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x04, 0x52, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x05, 0x52, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x06, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x07, 0x52, 0x13, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x08, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6c,
	0x61, 0x67, 0x73, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x48, 0x09, 0x52, 0x0b,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x44,
	0x0a, 0x1c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x19, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x1d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x1a, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x14,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x12, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x48, 0x0a, 0x1e, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x1b, 0x73,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4a, 0x0a,
	0x1f, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x1c, 0x73, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x16, 0x73, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x14, 0x73, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x1d, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x1b, 0x77,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a,
	0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x74,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x12,
	0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x0b, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x13, 0x52, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0d, 0x73, 0x6b, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x14, 0x52, 0x0b, 0x73, 0x6b,
	0x79, 0x70, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x15, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x27,
	0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x16, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x6f,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x42,
	0x16, 0x0a, 0x14, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42,
	0x1f, 0x0a, 0x1d, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x42, 0x20, 0x0a, 0x1e, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x21, 0x0a, 0x1f, 0x5f,
	0x73, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x22,
	0x0a, 0x20, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x20, 0x0a,
	0x1e, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69,
	0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x6b, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x73, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x74, 0x68, 0x65, 0x74, 0x61, 0x2d, 0x6c, 0x61, 0x6b, 0x65, 0x2f, 0x67, 0x6f, 0x2d, 0x70,
	0x73, 0x74, 0x3b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teams_message_proto_rawDescOnce sync.Once
	file_teams_message_proto_rawDescData = file_teams_message_proto_rawDesc
)

func file_teams_message_proto_rawDescGZIP() []byte {
	file_teams_message_proto_rawDescOnce.Do(func() {
		file_teams_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_teams_message_proto_rawDescData)
	})
	return file_teams_message_proto_rawDescData
}

var file_teams_message_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_teams_message_proto_goTypes = []interface{}{
	(*TeamMessage)(nil), // 0: TeamMessage
}
var file_teams_message_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_teams_message_proto_init() }
func file_teams_message_proto_init() {
	if File_teams_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_teams_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_teams_message_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teams_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teams_message_proto_goTypes,
		DependencyIndexes: file_teams_message_proto_depIdxs,
		MessageInfos:      file_teams_message_proto_msgTypes,
	}.Build()
	File_teams_message_proto = out.File
	file_teams_message_proto_rawDesc = nil
	file_teams_message_proto_goTypes = nil
	file_teams_message_proto_depIdxs = nil
}
